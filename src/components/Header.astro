---
import ButtonText from "./ButtonText.astro";
import Burger from "./Burger.astro";
---

<header>
  <div class="filter">
    <a href="/">
      <img src="/assets/bakkefestlogo.svg" alt="Bakkefest logo" class="logo" />
    </a>
    <h5>11. - 13. juli // Gilleleje</h5>
  </div>
  <div>
    <ButtonText
      text="Køb Billet"
      text_color="var(--pink)"
      background_color="var(--yellow)"
      url="https://www.ticketmaster.dk/artist/bakkefest-billetter/972610?language=da-dk"
    />

    <Burger />
  </div>
</header>

<script>
  // Denne funktion kører når der scrolles og tjekker om header skal have filter
  document.addEventListener("scroll", () => {
    const header = document.querySelector(".filter");

    // Finder elementer ved punktet (100px fra venstre, 60px fra toppen)
    const elements = document.elementsFromPoint(100, 60);

    // Tjekker om nogen af elementerne har pink baggrund, pink SVG fill eller klassen .hill
    const isOverPinkOrHill = Array.from(elements).some((el) => {
      const styles = window.getComputedStyle(el);
      const bgColor = styles.backgroundColor;
      const svgFill =
        el instanceof SVGElement
          ? styles.fill || el.getAttribute("fill")
          : null;
      const hasHillClass = el.classList && el.classList.contains("hill_filter");

      return (
        bgColor === "rgb(231, 26, 115)" ||
        svgFill === "rgb(231, 26, 115)" ||
        svgFill === "#e71a73" ||
        hasHillClass
      );
    });

    // Tilføj eller fjern filter på header
    if (isOverPinkOrHill) {
      header.style.filter =
        "brightness(0) saturate(100%) invert(89%) sepia(56%) saturate(483%) hue-rotate(191deg) brightness(107%) contrast(103%)";
    } else {
      header.style.filter = "";
    }
  });
</script>

<style>
  .pulse {
    animation-name: pulse_kf;
    animation-duration: 1s;
    animation-iteration-count: infinite;
    animation-direction: alternate-reverse;
    animation-timing-function: ease-in-out;
  }

  @keyframes pulse_kf {
    from {
      scale: 1;
    }
    to {
      scale: 0.9;
    }
  }

  header {
    display: flex;
    position: fixed;
    top: 0;
    left: 0;
    align-items: center;
    justify-content: space-between;
    width: 100vw;
    padding: 1rem 6rem;
    background-color: transparent;
    z-index: 100;
  }

  header > div > ButtonText {
    filter: none !important; /* Ekskluderer ButtonText fra at arve filteret */
  }

  .logo {
    width: 50px;
    height: auto;
    aspect-ratio: 1/1;
    transition: 0.3s;
  }

  .logo:hover {
    scale: 1.2;
    transition: 0.3s;
  }

  h5 {
    font-family: owners-xwide, sans-serif;
    font-weight: 500;
    font-style: normal;
    text-transform: uppercase;
    font-size: 18px;
    color: var(--pink);
    text-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  div {
    display: flex;
    gap: 10px;
    align-items: center;
  }

  img {
    filter: drop-shadow(0 4px 6px rgba(0, 0, 0, 0.1));
  }

  @media (max-width: 1000px) {
    header {
      padding: 1rem 2rem;
    }
  }
</style>
